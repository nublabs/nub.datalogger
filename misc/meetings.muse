#title meetings regarding the nublogger
#author alec resnick (alec@nublabs.org)
#date 08 October 2008
#desc minutes of meetings about the nublogger



* meeting with alex for overview of nublogger construction
** notes
  - Third organizer to the right on the top row has all the needed parts.
  - Resistor values are not printed on the board, meaning you need to match the board with the schematic or an existing board
  - Since these will be going to schools, use lead-free solder (the lid with the green trim)
  - All 25k resistors are actually 24k resistors
  - Most resistors you need are in green labeled bins in organizer
  - 10k resistor form factor won't fit, so you need to angle the resistor up relative to board
  - Make five two sensor borads, the rest (11 sensors) should be one sensor
  - On the switch, the two leads on the bottom are electrically the same: use the one on the side and one of the ones on the bottom.  Messing this up manifests as a temperature equivalent to a short.
  - Use stranded wire for connectors, since they will be flexing.
  - With board facing up, bottom of battery header is GND
  - Note that headers are extremely close: try to keep them apart while soldering
  - We're using M5103 thermistors
  - For the LEDs negative side = shorter side --> goes to the flat side in the schematic
  - Notes on Arduino development:
    - Upload to IO board -- someone else is using COM port!
    - ISP cable points toward board (needs twist)
    - In AVR studio, choose HEX, hit program
    - Program EEPROM
    - Plug in batteries, do its thing.
    

** Steps to build
 1. Get board
 2. Plug in microcontroller
 3. Wet pads for micro and solder
 4. Fold resistors and stuff.  Note that 10k resistor form factor won't fit, so you need to angle the resistor up relative to board.
 5. Insert LEDs (negative side = shorter side --> goes to the flat side in the schematic)
 6. Insert capacitors (47nF)
 7. Insert headers, matching up rectangle to rectangular flap on headers.
 8. Flip over and rest the board on something soft to keep headers in
 9. Solder one lead, check if headers flush, push and heat up to keep flush.
 10. Don't need to populate six pin header on datalogger
 11. Insert XBee last
 12. Be sure to snip off leads as closely as possible on underside (no insulation!) 
 13. For the cap, drill holes in a triangle; be sure to drill (with 1/4" bit) upside down so that the top is flat instead of bowed
 14. Solder wires onto switch, inserting stranded wire through the hole in the switch's leads.  The wire should be about two inches long (note that one will need to be longer than the other, to allow for the different origins on the switch) and the two wires should be twisted together.
 15. Put crimps onto the wire; directionality doesn't matter since this is all just resistive.
 16. Crimps should just slide into headers.  A screwdriver or tweezers will help to insert them.
 17. Put a lockwasher on top and bolt down the switch tight.
 18. Insert 3.5mm jack and bolt down tightly.
 19. Label sensor 1/sensor 2
 20. Label on/off position of switch
 21. Connect battery header; note that DIRECTION MATTERS
 22. Label datalogger with name


** Tasks remaining
 - Arduino development
   - TODO
     - Sample rate
     - Doesn't listen to computer at all
     - Sleep command for XBee
     - eg name, sleep, parameter
     - Write up command protocol
     - On bootup, reads first 256 bytes of EEPROM
     - Reads in stream called name
     - Hardcoding name in code as we burn, since we are making so few dataloggers
     - Need to make sure to sleep, not just delay!
     - When asleep, assert pin PD2 --> XBEESLEEP
     - Learn how to intelligently manage power
       - Shut down ADC, XBEE
     - Blink LED on bootup, comm, etc. 
 - Pick up 22 gauge stranded wire
 - Purchase crimper for insulation, crimp pins, etc.
 - Strain relief on sensors, crimps into headers
 - Figure out how to indicate on/off
 - Label sensor 1/sensor 2 (see board)
 - Dongle case
 - Datalogger holder
 - How to mount thermistors to suckers/windows/whatever.
